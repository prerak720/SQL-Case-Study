                                        --CASE STUDY 
										--Problem Statement:
--You are a database administrator. You want to use the data to answer a few questions about your customers,
--especially about the sales and profit coming from different states, 
--money spent in marketing and various other factors such as COGS (Cost of Goods Sold), budget profit etc. 
--You plan on using these insights to help find out which items are being sold the most.
--You have been provided with the sample of the overall customer data due to privacy issues.
--But you hope that these samples are enough for you to write fully functioning SQL queries to help answer the questions.


SELECT * FROM [dbo].[fact]
SELECT * FROM [dbo].[Location]
SELECT * FROM [dbo].[Product]

													--QUSTION


--1. Display the number  of states present in the Location Table.

SELECT COUNT(DISTINCT STATE) AS [NO OF STATE] FROM Location
--2. How  many productS are  ofregular type?
SELECT COUNT( PRODUCT) AS [REGULAR TYPE]  FROM Product
WHERE TYPE = 'REGULAR'

3. How much spending  has been done on marketing of product ID 1?

SELECT SUM(Marketing)  AS [MARKETING ]FROM fact
WHERE ProductId ='1'

--4. What is the minimum sales of a product?

SELECT MIN(SALES) AS [MINIMUM SALE] FROM fact

--5. Display the max CostofGood Sold (COGS).

SELECT MAX(COGS) AS [MAXIMUM cogd] FROM fact

--6. Display the details of the product where product type is coffee.

select * from Product
where Product_Type = 'coffee'

7. Display the details  where total expenses are greaterthan 40.

select * from fact
where Total_Expenses > 40

8.  What is the averag esales in areacode 719?

select avg(sales) from fact
where Area_Code = '719'

9  Find out the total profit generated by Colorado state.

select sum(profit) as [colorado profit] from fact
where Area_Code in (select Area_Code from Location
           where State = 'colorado')

(10)10. Display the average inventory for each product ID.

select avg (inventory) as [avg inv],ProductId from fact
group by ProductId
order by [avg inv] desc

--11. Display state in a sequential order in a Location Table.

select state from Location
order by  state asc

--12. Display the average budget of the Product where the average budget margin should be greater than 100.
select ProductId,avg(Budget_Margin) as [avg budget] from fact 
group by ProductId
having avg(Budget_Margin)>100
order by ProductId asc


--13. What is the total sales done on date 2010-01-01?

select sum(sales) from fact
where date = '2010-01-01'

--14. Display the average total expense of each product ID on an individual date.
select avg(Total_Expenses) as [avg budget],ProductId,Date from fact
group by ProductId,Date
order by ProductId asc


--15. Display the table with the following attributes such as date, productID,product_type, product, sales, profit, state, area_code.

select a.ProductId,a.Date,a.Sales,a.Profit,b.Product,c.State,c.Area_Code from fact as a
inner join Product as b
on a.ProductId = b.ProductId
inner join Location as c
on a.Area_Code=c.Area_Code





--16. Display the rank without any gap to show the sales wise rank.

 
select Sales,dense_rank () over ( order by sales) from fact
group by Sales


--17. Find the state wise profit and sales.

select sum(a.Profit),sum(a.sales),b.state from  fact as a
inner join Location as b
on a.Area_Code = b.Area_Code
group by b.State




--18. Find the state wise profit and sales along with the product name.

select sum(a.Sales),sum(a.Profit),(b.Product) from fact as a
inner join Product as b
on a.ProductId = b.ProductId
group by b.Product


--19. If there is an increase in sales of 5%, calculate the increasedsales.

select Sales ,(Sales*1.05)from fact 
 

--20. Find the maximum profit along with the product ID and producttype.

select top 1 max(a.Profit),b.ProductId,b.Product_Type from fact as a
inner join Product as b
on a.ProductId = b.ProductId
group by b.ProductId,b.Product_Type 
order by max(a.Profit) desc

--21. Create a stored procedure to fetch the result according to the product type from Product Table.
create procedure GETPRODUCT
(@product  varchar(50) )
as
BEGIN 
SELECT Product_Type  FROM Product
END


--22. Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss.
SELECT *,
CASE 
 WHEN TOTAL_EXPENSES < 60 THEN 'PROFIT' 
ELSE 'LOSS' END AS RESULT  FROM FACT
--23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order.

SELECT Date, DATEPART (WEEK,Date) AS[WEEK],SUM(SALES ),ProductId FROM fact
GROUP BY ProductId,Date
WITH ROLLUP

--24. Apply union and intersection operator on the tables which consist of attribute area code.

SELECT Area_Code FROM fact
UNION 
SELECT Area_Code FROM Location

SELECT Area_Code FROM fact
Intersect
SELECT Area_Code FROM Location
--25. Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference.
CREATE FUNCTION dbo.GetProductsByType
(
    @productType VARCHAR(50)
)
RETURNS TABLE
AS
RETURN
(
    SELECT *
    FROM Product
    WHERE product_type = @productType
);
SELECT * FROM dbo.GetProductsByType  ('COFFEE')

--26. Change the product type from coffee to tea where product ID is 1 and undo it.
SELECT * FROM Product
-- Change the product type from "coffee" to "tea" for product ID 1
BEGIN TRANSACTION
UPDATE Product
SET product_type = 'tea'
WHERE ProductId = '1'
SELECT * FROM Product WHERE productid = 1;
ROLLBACK;
--27. Display the date, product ID and sales where total expenses are between 100 to 200.

SELECT DATE, ProductId,Sales FROM fact
WHERE Total_Expenses BETWEEN 100 AND 200

--28. Delete the records in the Product Table for regular type.
BEGIN TRANSACTION 
DELETE FROM Product
WHERE TYPE = 'REGULAR'


ROLLBACK TRANSACTION

SELECT * FROM Product
--29. Display the ASCII value of the fifth character from the 

SELECT ASCII (SUBSTRING(Product,8,1)) FROM Product


